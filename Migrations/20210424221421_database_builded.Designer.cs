// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(rentcarContext))]
    [Migration("20210424221421_database_builded")]
    partial class database_builded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FinalProject.Models.Alquileres", b =>
                {
                    b.Property<int>("IdAlquileres")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAlquileres")
                        .HasColumnType("int");

                    b.Property<int>("ClientesIdClientes")
                        .HasColumnName("Clientes_idClientes")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnName("fecha_fin")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnName("fecha_inicio")
                        .HasColumnType("date");

                    b.Property<double>("Monto")
                        .HasColumnName("monto")
                        .HasColumnType("double");

                    b.Property<sbyte>("Pagado")
                        .HasColumnName("pagado")
                        .HasColumnType("tinyint");

                    b.Property<int>("VehiculosIdVehiculos")
                        .HasColumnName("Vehiculos_idVehiculos")
                        .HasColumnType("int");

                    b.HasKey("IdAlquileres", "ClientesIdClientes")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("ClientesIdClientes")
                        .HasName("fk_Alquileres_Clientes1_idx");

                    b.HasIndex("VehiculosIdVehiculos")
                        .HasName("fk_Alquileres_Vehiculos1_idx");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("FinalProject.Models.Clientes", b =>
                {
                    b.Property<int>("IdClientes")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idClientes")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnName("cedula")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnName("correo")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasColumnName("licencia")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnName("nacionalidad")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<int>("SangreIdSangre")
                        .HasColumnName("Sangre_idSangre")
                        .HasColumnType("int");

                    b.Property<sbyte>("Status")
                        .HasColumnName("status")
                        .HasColumnType("tinyint");

                    b.HasKey("IdClientes")
                        .HasName("PRIMARY");

                    b.HasIndex("SangreIdSangre")
                        .HasName("fk_Clientes_Sangre1_idx");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FinalProject.Models.Sangre", b =>
                {
                    b.Property<int>("IdSangre")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idSangre")
                        .HasColumnType("int");

                    b.Property<string>("Sangre1")
                        .IsRequired()
                        .HasColumnName("Sangre")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("IdSangre")
                        .HasName("PRIMARY");

                    b.ToTable("Sangre");
                });

            modelBuilder.Entity("FinalProject.Models.TipoVehiculos", b =>
                {
                    b.Property<int>("IdTipoVehiculos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTipoVehiculos")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("IdTipoVehiculos")
                        .HasName("PRIMARY");

                    b.ToTable("TipoVehiculos");
                });

            modelBuilder.Entity("FinalProject.Models.Vehiculos", b =>
                {
                    b.Property<int>("IdVehiculos")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idVehiculos")
                        .HasColumnType("int");

                    b.Property<string>("Año")
                        .IsRequired()
                        .HasColumnName("año")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<float>("Capacidadcarga")
                        .HasColumnName("capacidadcarga")
                        .HasColumnType("float");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnName("color")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<sbyte>("Disponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("disponible")
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("'1'");

                    b.Property<double>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("double");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnName("marca")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("modelo")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<int>("Nroseguro")
                        .HasColumnName("nroseguro")
                        .HasColumnType("int");

                    b.Property<int>("Pasajeros")
                        .HasColumnName("pasajeros")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnName("precio")
                        .HasColumnType("float");

                    b.Property<sbyte>("Status")
                        .HasColumnName("status")
                        .HasColumnType("tinyint");

                    b.Property<int>("TipoVehiculosIdTipoVehiculos")
                        .HasColumnName("TipoVehiculos_idTipoVehiculos")
                        .HasColumnType("int");

                    b.HasKey("IdVehiculos")
                        .HasName("PRIMARY");

                    b.HasIndex("TipoVehiculosIdTipoVehiculos")
                        .HasName("fk_Vehiculos_TipoVehiculos1_idx");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("FinalProject.Models.Alquileres", b =>
                {
                    b.HasOne("FinalProject.Models.Clientes", "ClientesIdClientesNavigation")
                        .WithMany("Alquileres")
                        .HasForeignKey("ClientesIdClientes")
                        .HasConstraintName("fk_Alquileres_Clientes1")
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Vehiculos", "VehiculosIdVehiculosNavigation")
                        .WithMany("Alquileres")
                        .HasForeignKey("VehiculosIdVehiculos")
                        .HasConstraintName("fk_Alquileres_Vehiculos1")
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.Clientes", b =>
                {
                    b.HasOne("FinalProject.Models.Sangre", "SangreIdSangreNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("SangreIdSangre")
                        .HasConstraintName("fk_Clientes_Sangre1")
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.Vehiculos", b =>
                {
                    b.HasOne("FinalProject.Models.TipoVehiculos", "TipoVehiculosIdTipoVehiculosNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoVehiculosIdTipoVehiculos")
                        .HasConstraintName("fk_Vehiculos_TipoVehiculos1")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
