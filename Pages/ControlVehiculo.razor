@page "/controlV"
@using FinalProject.Models;
@inject DbContextOptions<rentcarContext> rentar
@inject IJSRuntime JSRuntime

<h1>Control de Vehiculos.</h1>
<hr>

@if (Vehiculos().Count > 0)
{


    <table class="table table-dark">
    <thead>
        <tr>
            <th>Marca</th>
            <th>Modelo</th>
            <th>Año</th>
            <th>Color</th>
            <th>Capacidad de carga</th>
            <th>Pasajeros</th>
            <th>Numero de seguro</th>
            <th>Status</th>
            <th>Acción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var clt in Vehiculos())
            {

                <tr>
                    <td>@clt.Marca</td>
                    <td>@clt.Modelo</td>
                    <td>@clt.Año</td>
                    <td>@clt.Color</td>
                    <td>@clt.Capacidadcarga</td>
                    <td>@clt.Pasajeros</td>
                    <td>@clt.Nroseguro</td>
                    @if (clt.Disponible == 0)
                    {
                        <td>No disponible</td>
                    }
                    else
                    {
                        <td>Disponible</td>
                    }

                    <td>
                        <button @onclick="()=>Change(clt.IdVehiculos)" class="btn btn-dark">@result(@clt.Status)</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr>

<div class="input-group-append">
    <div id="map" style="height:500px;width:100%;"></div>
</div>


}
else
{

    <h3>No hay vehiculos registrados.</h3>

}


@code {

    List<Vehiculos> Vehiculos() => new rentcarContext(rentar).Vehiculos.ToList();

    rentcarContext context;

    protected override void OnInitialized()
    {
        context = new rentcarContext(rentar);
    }



    string result(int response)
    {

        string final;

        if (response == 0)
        {

            final = "Habilitar";
        }
        else
        {

            final = "Inhabilitar";
        }

        return final;
    }

    void Change(int id)
    {

        var customer = context.Vehiculos.Where(i => i.IdVehiculos == id).SingleOrDefault();

        if (customer.Status == 1)
        {

            customer.Status = 0;
        }
        else if (customer.Status == 0)
        {

            customer.Status = 1;
        }

        context.SaveChanges();
    }

    //Mapa

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initMap", context.Vehiculos.ToList<Vehiculos>());
        }
    }
}